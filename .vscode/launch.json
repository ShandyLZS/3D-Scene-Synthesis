{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: get stats bed",
            "type": "python",
            "request": "launch",
            "program": "utils/threed_front/2_get_stats.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--room_type", "bed",
            ]
        },
        {
            "name": "Python: vis_gt_sample",
            "type": "python",
            "request": "launch",
            "program": "utils/threed_front/vis/vis_gt_sample.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--scene_json", "0a761819-05d1-4647-889b-a726747201b1",
                "--room_id", "MasterBedroom-24539", 
                "--n_samples", "10",
            ]
            // 
        },
        {
            "name": "Python: Pretrain layout",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "start_deform=False",
                "resume=False",
                "finetune=False",
                "weight=[]",
                "distributed.available_gpus=[4]",
                "distributed.num_gpus=1",
                "data.dataset=3D-Front",
                "data.split_type=bed",
                "data.n_views=20",
                "data.aug=False",
                "device.num_workers=32",
                "train.batch_size=128",
                "train.epochs=500",
                "train.freeze=[]",
                "scheduler.latent_input.milestones=[400]",
                "scheduler.generator.milestones=[400]",
                "log.if_wandb=True",
                //"exp_name=pretrain_3dfront_bedroom"
                "exp_name=vae_annealing_schedule_expand_zdim"
            ]
        },
        {
            "name": "Python: Shape training",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "start_deform=True",
                "resume=True",
                "finetune=True",
                // "weight=['outputs/3D-Front/train/2023-07-28/00-30-42/model_best.pth']", //original
                // "weight=['outputs/3D-Front/train/2023-09-02/20-25-36/model_best.pth']", //vae based
                "weight=['outputs/3D-Front/train/2023-09-10/01-03-14/model_best.pth']", //vae based change kl
                // "weight=['outputs/3D-Front/train/2023-09-12/00-04-54/model_best.pth']", //vae based expand zdim
                "distributed.available_gpus=[6]",
                "distributed.num_gpus=1",
                "data.dataset=3D-Front",
                "data.n_views=20",
                "data.aug=False",
                "data.downsample_ratio=4",
                "device.num_workers=32",
                "train.batch_size=16",
                "train.epochs=600",
                "train.freeze=[]",
                "scheduler.latent_input.milestones=[300]",
                "scheduler.generator.milestones=[300]",
                "log.if_wandb=True",
                "exp_name=vae_annealing_schedule_shape_cd"
            ]
        },
        {
            "name": "Python: Scene generation",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "mode=generation",
                "start_deform=True",
                "data.dataset=3D-Front",
                "finetune=True",
                "distributed.available_gpus=[6]",
                "distributed.num_gpus=1",
                //"weight=['outputs/3D-Front/train/2023-07-30/15-32-46/model_best.pth']", //original
                //"weight=['outputs/3D-Front/train/2023-08-03/14-49-34/model_best.pth']", //with 1edge_loss
                //"weight=['outputs/3D-Front/train/2023-08-02/19-42-00/model_best.pth']", //with 2edge_loss
                //"weight=['outputs/3D-Front/train/2023-08-02/22-31-43/model_best.pth']", //with 0.1edge_loss
                //"weight=['outputs/3D-Front/train/2023-08-11/15-09-37/model_best.pth']", //cd+0.1edge_loss
                //"weight=['outputs/3D-Front/train/2023-08-14/23-17-32/model_best.pth']", //0.5cd+0.1edge_loss
                //"weight=['outputs/3D-Front/train/2023-08-24/11-35-25/model_best.pth']",//diffusion layout
                //"weight=['outputs/3D-Front/train/2023-08-31/23-27-31/model_best.pth']",
                //"weight=['outputs/3D-Front/train/2023-09-02/20-25-36/model_best.pth']",
                // "weight=['outputs/3D-Front/train/2023-09-02/20-25-36/model_best.pth']", //vae based layout
                //"weight=['outputs/3D-Front/train/2023-07-28/00-30-42/model_best.pth']", //original layout
                //"weight=['outputs/3D-Front/train/2023-09-08/18-38-59/model_best.pth']", //vae based without cd 150epoch
                //"weight=['outputs/3D-Front/train/2023-09-11/10-47-33/model_best.pth']", //vae based without cd  change kl
                //"weight=['outputs/3D-Front/train/2023-09-12/11-00-48/model_best.pth']", //vae based without cd  extend zdim
                "weight=['outputs/3D-Front/train/2023-10-10/15-33-13/model_best.pth']", //vae based change kl
                "generation.room_type=bed",
                "data.split_dir=splits",
                "data.split_type=bed",
                "generation.phase=generation",
            ]
        },
        {
            "name": "Python: single view generation",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "mode=demo",
                "start_deform=True",
                "finetune=True",
                "data.n_views=1",
                "data.dataset=3D-Front",
                "data.split_type=bed",
                "weight=['outputs/3D-Front/train/2023-07-30/15-32-46/model_best.pth']",
                "optimizer.method=RMSprop",
                "optimizer.lr=0.01",
                "scheduler.latent_input.milestones=[1200]",
                "scheduler.latent_input.gamma=0.1",
                "demo.epochs=2000",
                "demo.batch_id=0",
                "demo.batch_num=1",
                "log.print_step=100",
                "log.if_wandb=False"
            ]
        },
        {
            "name": "Vis Generation",
            "type": "python",
            "request": "launch",
            "program": "utils/threed_front/vis/vis_pred.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                //"--pred_file", "outputs/3D-Front/generation/2023-07-30/23-29-58/vis/bed/sample_1259_0.npz",
                //"--pred_file", "outputs/3D-Front/generation/2023-08-13/23-14-59/vis/bed/sample_1050_0.npz", //original fixed latent
                //"--pred_file", "outputs/3D-Front/generation/2023-08-03/16-36-12/vis/bed/sample_0_0.npz", //edgeweight1
                //"--pred_file","outputs/3D-Front/generation/2023-08-02/21-59-38/vis/bed/sample_1000_0.npz", //edgeweight2
                //"--pred_file","outputs/3D-Front/generation/2023-08-03/00-23-36/vis/bed/sample_0_0.npz", //edgeweight0.1
                //"--pred_file", "outputs/3D-Front/generation/2023-08-11/22-45-18/vis/bed/sample_55_0.npz", //cd+0.1edge_loss
                //"--pred_file", "outputs/3D-Front/generation/2023-08-13/22-16-08/vis/bed/sample_1050_0.npz", //cd+0.1edge_loss fixed latent
                //"--pred_file", "outputs/3D-Front/generation/2023-08-15/17-01-17/vis/bed/sample_100_0.npz",//0.5cd+0.1edge_loss fixed latent
                //"--pred_file", "outputs/3D-Front/generation/2023-09-07/10-16-32/vis/bed/sample_350_0.npz", //vae based layout
                //"--pred_file", "outputs/3D-Front/generation/2023-09-06/15-32-31/vis/bed/sample_500_0.npz", //final result for now
                //"--pred_file","outputs/3D-Front/generation/2023-09-07/15-38-48/vis/bed/sample_1000_0.npz", //original layout training
                //"--pred_file", "outputs/3D-Front/generation/2023-09-08/11-14-24/vis/bed/sample_250_0.npz", //vae based without cd 150epoch
                // "--pred_file", "outputs/3D-Front/generation/2023-09-11/21-30-08/vis/bed/sample_800_0.npz", //vae based change kl without cd
                
                //"--pred_file", "outputs/3D-Front/generation/2023-09-12/20-54-04/vis/bed/sample_200_0.npz", //vae based without cd  extend zdim
                "--pred_file", "outputs/3D-Front/generation/2023-10-11/11-17-02/vis/bed/sample_609_0.npz",//vae based change kl
                //"--cam_pos", "060",
                "--device", "7",
                "--use_retrieval"
            ]
        },
        {
            "name": "Single view reconstruction",
            "type": "python",
            "request": "launch",
            "program": "utils/threed_front/vis/vis_svr.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--dump_dir", "demo/3D-Front/output", 
                "--sample_name", "[FILENAME IN dump_dir]"
            ]
        }
    ]
}